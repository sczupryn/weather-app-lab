name: Zadanie 2

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  ci_step:
    name: Multiarch Image Build, Scan and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/weather-app-lab
      CACHE_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/weather-app-lab-cache

    steps:
      - uses: actions/checkout@v4

      - name: SSH Agent Setup
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          log-public-key: true

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: QEMU & Buildx set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build amd64 Docker image
        uses: docker/build-push-action@v5
        id: amd64-build
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          load: true
          build-args: |
            SSH_PRIVATE_KEY=${{ secrets.SSH_PRIVATE_KEY }}
          ssh: default
          tags: image-amd64:latest
          cache-from: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max

      - name: Scan amd64 image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ steps.amd64-build.outputs.image }}
          severity: CRITICAL,HIGH
          format: table
          exit-code: 1

      - name: Build arm64 Docker image
        uses: docker/build-push-action@v5
        id: arm64-build
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          load: true
          build-args: |
            SSH_PRIVATE_KEY=${{ secrets.SSH_PRIVATE_KEY }}
          ssh: default
          tags: image-arm64:latest
          cache-from: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_IMAGE }}:cache,mode=max

      - name: Scan arm64 image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ steps.arm64-build.outputs.image }}
          severity: CRITICAL,HIGH
          format: table
          exit-code: 1

      - name: Push Docker image to GHCR
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            SSH_PRIVATE_KEY=${{ secrets.SSH_PRIVATE_KEY }}
          ssh: default
          tags: ${{ steps.meta.outputs.tags }}
