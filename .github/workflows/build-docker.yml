name: Zadanie 2

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  ci_step:
    name: Multiarch Image Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/weather-app-lab-2
      CACHE_REPO: ${{ vars.DOCKERHUB_USERNAME }}/weather-app-lab-2-cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: |
            type=registry,ref=${{ env.CACHE_REPO }}:cache
          cache-to: |
            type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max

      - name: Scan built image for vulnerabilities
        uses: aquasecurity/trivy-action@v0.61.1
        id: trivy-scan
        with:
          image-ref: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.tags }}
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          format: json
          output: trivy-report.json

      - name: Check for vulnerabilities
        run: |
          if jq '.Results[].Vulnerabilities | length == 0' trivy-report.json | grep -q false; then
            echo "Critical or high vulnerabilities detected"
            exit 1
          fi

      - name: Push Docker image to GHCR
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.CACHE_REPO }}:cache
          cache-to: type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max
